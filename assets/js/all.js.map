{"version":3,"sources":["all.js"],"names":["countries","document","querySelector","cyties","map","L","center","zoom","tileLayer","attribution","addTo","axios","get","then","res","data","markers","MarkerClusterGroup","forEach","item","iconColor","total","Icon","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","addLayer","marker","latitude","longitude","icon","bindPopup","storeNm","addr","tel","busiTime","updateTime","getUserPosition","navigator","geolocation","showPosition","position","setView","coords","showError","alert","getCurrentPosition","error","geoData","countriesOptions","cytiesOptions","index","CityName","innerHTML","addEventListener","selectedIndex","AreaList","AreaName"],"mappings":";;AAAA,IAAIA,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAhB;AACA,IAAIC,MAAM,GAAGF,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAb;AAEA,IAAIE,GAAG,GAAGC,CAAC,CAACD,GAAF,CAAM,KAAN,EAAa;AACnBE,EAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,CADW;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAAb,CAAV;AAIAF,CAAC,CAACG,SAAF,CAAY,oDAAZ,EAAkE;AAC9DC,EAAAA,WAAW,EAAE;AADiD,CAAlE,EAEGC,KAFH,CAESN,GAFT;AAIAO,KAAK,CAACC,GAAN,CAAU,oDAAV,EACKC,IADL,CACU,UAACC,GAAD,EAAS;AACX;AACA,MAAIC,IAAI,GAAGD,GAAG,CAACC,IAAf;AACA,MAAIC,OAAO,GAAG,IAAIX,CAAC,CAACY,kBAAN,GAA2BP,KAA3B,CAAiCN,GAAjC,CAAd;AACAW,EAAAA,IAAI,CAACG,OAAL,CAAa,UAACC,IAAD,EAAU;AAEnB;AACA,QAAMC,SAAS,GAAI,YAAM;AACrB,UAAID,IAAI,CAACE,KAAL,KAAe,CAAnB,EAAsB;AAClB,eAAO,IAAIhB,CAAC,CAACiB,IAAN,CAAW;AACdC,UAAAA,OAAO,EAAE,yFADK;AAEdC,UAAAA,SAAS,EAAE,+EAFG;AAGdC,UAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CAHI;AAIdC,UAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,CAJE;AAKdC,UAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAC,EAAL,CALC;AAMdC,UAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL;AANE,SAAX,CAAP;AAQH,OATD,MASO;AACH,eAAO,IAAIvB,CAAC,CAACiB,IAAN,CAAW;AACdC,UAAAA,OAAO,EAAE,wFADK;AAEdC,UAAAA,SAAS,EAAE,+EAFG;AAGdC,UAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CAHI;AAIdC,UAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,CAJE;AAKdC,UAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAC,EAAL,CALC;AAMdC,UAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL;AANE,SAAX,CAAP;AAQH;AACJ,KApBiB,EAAlB,CAHmB,CA0BnB;;;AACAZ,IAAAA,OAAO,CAACa,QAAR,CACIxB,CAAC,CAACyB,MAAF,CAAS,CAACX,IAAI,CAACY,QAAN,EAAgBZ,IAAI,CAACa,SAArB,CAAT,EAA0C;AACtCC,MAAAA,IAAI,EAAEb;AADgC,KAA1C,EAEGc,SAFH,8DAG4Bf,IAAI,CAACgB,OAHjC,+IAIsEhB,IAAI,CAACE,KAJ3E,0GAKsDF,IAAI,CAACiB,IAL3D,0GAMsDjB,IAAI,CAACkB,GAN3D,sHAOwDlB,IAAI,CAACmB,QAP7D,kIAQ0DnB,IAAI,CAACoB,UAR/D,kCADJ;AAYH,GAvCD;AAwCAnC,EAAAA,GAAG,CAACyB,QAAJ,CAAab,OAAb,EA5CW,CA8CX;;AACA,WAASwB,eAAT,GAA2B;AACvB,QAAIC,SAAS,CAACC,WAAd,EAA2B;AACvB;AADuB,UAEdC,YAFc,GAEvB,SAASA,YAAT,CAAsBC,QAAtB,EAAgC;AAC5BxC,QAAAA,GAAG,CAACyC,OAAJ,CAAY,CAACD,QAAQ,CAACE,MAAT,CAAgBf,QAAjB,EAA2Ba,QAAQ,CAACE,MAAT,CAAgBd,SAA3C,CAAZ,EAAmE,EAAnE;AACH,OAJsB,EAKvB;;;AALuB,UAMde,SANc,GAMvB,SAASA,SAAT,GAAqB;AACjBC,QAAAA,KAAK,CAAC,kBAAD,CAAL;AACH,OARsB;;AASvBP,MAAAA,SAAS,CAACC,WAAV,CAAsBO,kBAAtB,CAAyCN,YAAzC,EAAuDI,SAAvD;AACH,KAVD,MAUO;AACHC,MAAAA,KAAK,CAAC,iBAAD,CAAL;AACH;AACJ;;AACDR,EAAAA,eAAe;AAClB,CAhEL,WAiEW,UAAUU,KAAV,EAAiB;AACpBF,EAAAA,KAAK,CAACE,KAAD,CAAL;AACH,CAnEL,E,CAqEA;;AACAvC,KAAK,CAACC,GAAN,CAAU,uFAAV,EACKC,IADL,CACU,UAACC,GAAD,EAAS;AACX,MAAIqC,OAAO,GAAGrC,GAAG,CAACC,IAAlB;AACA,MAAIqC,gBAAgB,GAAG,EAAvB;AACA,MAAIC,aAAa,GAAG,EAApB;AACAD,EAAAA,gBAAgB,iFAAhB;AACAD,EAAAA,OAAO,CAACjC,OAAR,CAAgB,UAACC,IAAD,EAAOmC,KAAP,EAAiB;AAC7BF,IAAAA,gBAAgB,8BAAsBjC,IAAI,CAACoC,QAA3B,gBAAwCpC,IAAI,CAACoC,QAA7C,cAAhB,CAD6B,CAE7B;AACA;AACA;AACH,GALD;AAMAvD,EAAAA,SAAS,CAACwD,SAAV,gDAAwDJ,gBAAxD;AAEApD,EAAAA,SAAS,CAACyD,gBAAV,CAA2B,QAA3B,EAAqC,YAAY;AAC7CJ,IAAAA,aAAa,GAAG,EAAhB;AACAF,IAAAA,OAAO,CAACnD,SAAS,CAAC0D,aAAV,GAA0B,CAA3B,CAAP,CAAqCC,QAArC,CAA8CzC,OAA9C,CAAsD,UAAAC,IAAI,EAAI;AAC1D;AACAkC,MAAAA,aAAa,8BAAsBlC,IAAI,CAACyC,QAA3B,gBAAwCzC,IAAI,CAACyC,QAA7C,cAAb;AACH,KAHD;AAIAzD,IAAAA,MAAM,CAACqD,SAAP,gDAAqDH,aAArD;AACH,GAPD;AAQH,CAtBL","file":"all.js","sourcesContent":["let countries = document.querySelector('#countries');\r\nlet cyties = document.querySelector('#cyties');\r\n\r\nvar map = L.map(\"map\", {\r\n    center: [24.994579, 121.311088],\r\n    zoom: 15\r\n});\r\nL.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n    attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n}).addTo(map);\r\n\r\naxios.get(\"https://3000.gov.tw/hpgapi-openmap/api/getPostData\")\r\n    .then((res) => {\r\n        // 處理地圖\r\n        let data = res.data;\r\n        var markers = new L.MarkerClusterGroup().addTo(map);\r\n        data.forEach((item) => {\r\n\r\n            //判斷標點顏色\r\n            const iconColor = (() => {\r\n                if (item.total !== 0) {\r\n                    return new L.Icon({\r\n                        iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png',\r\n                        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\r\n                        iconSize: [25, 41],\r\n                        iconAnchor: [12, 41],\r\n                        popupAnchor: [1, -34],\r\n                        shadowSize: [41, 41]\r\n                    });\r\n                } else {\r\n                    return new L.Icon({\r\n                        iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\r\n                        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\r\n                        iconSize: [25, 41],\r\n                        iconAnchor: [12, 41],\r\n                        popupAnchor: [1, -34],\r\n                        shadowSize: [41, 41]\r\n                    });\r\n                }\r\n            })();\r\n\r\n\r\n            //群組標點.增加圖層(leaflet的標點([座標])).增加popup\r\n            markers.addLayer(\r\n                L.marker([item.latitude, item.longitude], {\r\n                    icon: iconColor\r\n                }).bindPopup(`<div>\r\n                <h4 class=\"m-0 mb-2 bold\">${item.storeNm}</h4>\r\n                <p class=\"m-0 mb-2 h5 text-danger\"><span class=\"bold\">三倍券庫存量：</span>${item.total}</p>\r\n                <p class=\"m-0 mb-2 h6\"><span class=\"bold\">地址：</span>${item.addr}</p>\r\n                <p class=\"m-0 mb-2 h6\"><span class=\"bold\">電話：</span>${item.tel}</p>\r\n                <p class=\"m-0 mb-2 h6\"><span class=\"bold\">營業時間：</span>${item.busiTime}</p>\r\n                <p class=\"m-0 mb-2 h6\"><span class=\"bold\">數據更新時間：</span>${item.updateTime}</p>\r\n                </div>`)\r\n            );\r\n        });\r\n        map.addLayer(markers);\r\n\r\n        //自動定位\r\n        function getUserPosition() {\r\n            if (navigator.geolocation) {\r\n                // 成功\r\n                function showPosition(position) {\r\n                    map.setView([position.coords.latitude, position.coords.longitude], 16);\r\n                }\r\n                // 失敗\r\n                function showError() {\r\n                    alert('抱歉，現在無法取的您的地理位置。')\r\n                }\r\n                navigator.geolocation.getCurrentPosition(showPosition, showError);\r\n            } else {\r\n                alert('抱歉，您的裝置不支援定位功能。');\r\n            }\r\n        }\r\n        getUserPosition();\r\n    })\r\n    .catch(function (error) {\r\n        alert(error);\r\n    })\r\n\r\n//製作縣市下拉選單\r\naxios.get('https://raw.githubusercontent.com/Feitoengineer19/mask-map/master/CityCountyData.json')\r\n    .then((res) => {\r\n        let geoData = res.data;\r\n        let countriesOptions = '';\r\n        let cytiesOptions = '';\r\n        countriesOptions = `<option value=\"\" selected disabled>請選擇縣市</option>`;\r\n        geoData.forEach((item, index) => {\r\n            countriesOptions += `<option value=\"${item.CityName}\">${item.CityName}</option>`;\r\n            // console.log(item.AreaList.forEach(item => {\r\n            //     console.log(item.AreaName);\r\n            // }));\r\n        })\r\n        countries.innerHTML = `<select name=\"\" id=\"countries\">${countriesOptions}</select>`;\r\n\r\n        countries.addEventListener('change', function () {\r\n            cytiesOptions = '';\r\n            geoData[countries.selectedIndex - 1].AreaList.forEach(item => {\r\n                // console.log(item.AreaName);\r\n                cytiesOptions += `<option value=\"${item.AreaName}\">${item.AreaName}</option>`;\r\n            })\r\n            cyties.innerHTML = `<select name=\"\" id=\"countries\">${cytiesOptions}</select>`;\r\n        })\r\n    })"]}